#!/bin/bash

alias src="source ~/.bashrc"

# Behaviour correction
function ifconfig() {
    echo "ifconfig is deprecated"
    echo "use 'ip addr show' or 'ip a' for short"
}

# JQ aliases
# TODO move to json-util
function jqhead() {
    number=$1

    if [[ -z "${number}" ]]; then
        number=1
    fi

    repeated=$(python -c "print('[]?' * ${number})")

    jq 'reduce path(.'"${repeated}"') as $path (.; setpath($path; {}))'
}

# play creates a temporary directory to test out an idea
function play() {
    DIR=$(mktemp -d)
    cd $DIR
    export PLAY=$DIR
}

# Specialized commands
alias murder="echo 'please use decimate'"
alias decimate="shred -uvzn 20"
alias fucking="sudo"
alias please='sudo'

# Common code commands
alias vim='vim -O'
alias ..='cd ..'
alias ...='cd ../..'
alias ag="ag --color -H"
alias tree="tree -C"

alias py2='python2'
alias py3='python3'

# Columns!
alias C1="awk '{print \$1}'"
alias C2="awk '{print \$2}'"
alias C3="awk '{print \$3}'"
alias C4="awk '{print \$4}'"
alias C5="awk '{print \$5}'"
alias C6="awk '{print \$6}'"
alias C7="awk '{print \$7}'"
alias C8="awk '{print \$8}'"
alias sum="awk '{sum+=\$1} END {print sum}'"

# Common command line commands
alias c='clear'
alias cls="clear && ls -l"
alias clt="clear && tree"
alias cp='cp -i'
alias grep='grep -i --color'
alias less="less -r"
alias ls='ls --color=auto'
alias l='ls -ohL --group-directories-first'
alias lt='ls -lhtc'
alias la='ls -lha --group-directories-first'
alias ll='ls -l --group-directories-first'
alias mnt="mount -o uid=$USER,fmask=0133,dmask=0022"
alias rm='rm -i'

# Keychain commands
alias kc="eval \`keychain --eval --agents ssh --timeout 5 --quiet personal\`"
alias kchour="eval \`keychain --eval --agents ssh --timeout 60 --quiet id_rsa\`"

# ==============================================================================
# Aliases for Git
# gc, gca, and gp are functions below
alias g='/usr/bin/git status'
alias gu='/usr/bin/git pull'
alias ga='/usr/bin/git add'
alias gd='/usr/bin/git diff'
alias gda='/usr/bin/git diff -U99999'
alias gb='/usr/bin/git branch'
alias gba='/usr/bin/git branch -a'
alias gco='/usr/bin/git checkout'
alias gm="/usr/bin/git merge --no-ff"
alias gff="/usr/bin/git merge --ff-only"

# https://git-scm.com/docs/pretty-formats
GIT_LOG_FORMAT='%Cred%h%Creset -%C(yellow)%-d%C(reset) %s %C(green)[%cr]%C(reset) %C(cyan)%G?%C(reset)'
alias gl="/usr/bin/git log --date-order --graph --pretty=format:'${GIT_LOG_FORMAT}' --abbrev-commit --date=relative"

GIT_LOG_FORMAT='%Cred%h%Creset -%C(yellow)%-d%C(reset) %s %C(green)[%cr]%C(reset) %C(bold blue)%an <%ae>%C(reset) %C(cyan)%G?%C(reset)'
alias gla="/usr/bin/git log --date-order --graph --pretty=format:'${GIT_LOG_FORMAT}' --abbrev-commit --date=relative --all"
alias gls="/usr/bin/git log --date-order --graph --pretty=format:'${GIT_LOG_FORMAT}' --abbrev-commit --date=relative --show-signature"
alias gll="/usr/bin/git log --date-order --graph --oneline"
alias gs="/usr/bin/git submodule"

function gc() {
    if git status &>/dev/null; then
        user_name=$(git config user.name)
        user_mail=$(git config user.email)
        user="${user_name} <${user_mail}>"

        signer=""
        user_key=$(git config user.signingkey)
        if [[ ! -z "${user_key}" ]]; then
            if gpg --list-keys --with-colons ${user_key} &>/dev/null; then
                uid=$(gpg --list-keys --with-colons ${user_key} | awk -F: '/^uid:/ { print $10 }')
                pub=$(gpg --list-keys --with-colons ${user_key} | awk -F: '/^pub:/ { print $5 }')
            fi
        else
            echo "No signingkey configured to commit with"
            exit 1
        fi

        echo -e "You will commit as ${user}"
        echo -e "You will sign the commit as ${uid}"
        echo -e "You will with the commit with ${user_key} belonging to ${pub}"
        echo -e "Do you want to continue? (ENTER)"
        read -n 1
    fi

    /usr/bin/git commit -S "$@"
}

function gca() {
    if git status &>/dev/null; then
        user_name=$(git config user.name)
        user_mail=$(git config user.email)
        user="${user_name} <${user_mail}>"
        echo -e "Committing as -- ${user}\n\nDo this? (enter)"
        read -n 1
    fi

    /usr/bin/git commit -a "$@"
}

function gp() {
    if /usr/bin/git status &>/dev/null; then
        /usr/bin/git push -nv 2>&1 | head -n -1
        echo -e "\nDo this? (enter)"
        read -n 1
    fi
}

# ==============================================================================
# Docker
alias d="/usr/bin/sudo /usr/bin/docker"
alias dn="/usr/bin/sudo /usr/bin/docker network"
alias de="/usr/bin/sudo /usr/bin/docker exec"
alias dc="/usr/bin/sudo /usr/bin/docker container"
alias dca="/usr/bin/sudo /usr/bin/docker container attach"
alias dps="/usr/bin/sudo /usr/bin/docker container ls --format \"table {{.Names}} \t {{.Image}} \t {{.RunningFor}} \t {{.Status}} \t {{.Ports}}\" "

function dsh () {
    /usr/bin/sudo /usr/bin/docker exec -it $1 /bin/sh
}

# Docker Compose
alias dk="/usr/bin/sudo /usr/bin/docker-compose"
alias dkps="/usr/bin/sudo /usr/bin/docker-compose ps"

# Kubernetes
alias k="/usr/bin/kubectl"
alias kg="/usr/bin/kubectl get"
alias kd="/usr/bin/kubectl describe"
alias kcg="/usr/bin/kubectl config get-contexts"
alias kcu="/usr/bin/kubectl config use-context"
alias kcc="/usr/bin/kubectl config current-context"
alias kaf="/usr/bin/kubectl apply -f"

function kcurrctx() {
    target="$HOME/.kube/config"
    if [[ ! -r "$target" ]]; then
        echo "Could not read $target - Do you have a kubectl configured?"
        return 1
    fi

    if which yq 2>&1 1>/dev/null; then
        yq -r '.["current-context"]' < "$target"
    else
        awk -F': ' '/^current-context: /{print $2}' < "$target"
    fi
}

# Applications
alias feh="feh --auto-zoom --borderless --draw-filename --geometry 800x600"
alias ffplay="ffplay -nodisp"

export FZF_DEFAULT_COMMAND='ag -g ""'
alias fzf="fzf --preview='cat {}'"

function va() {
    for dir in .venv venv; do
        if [[ -d $dir ]]; then
            source "${dir}/bin/activate"
            return 0
        fi
    done
    echo "Failed to activate virtual environment."
    return 1
}

alias rebuild_ctags="cd ~/dev/; ctags -R --python-kinds=-i"
